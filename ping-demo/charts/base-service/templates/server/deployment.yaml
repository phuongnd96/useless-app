{{- $env := (include "base-service.server.env" . | fromYaml) -}}
apiVersion: apps/v1
kind: {{ .Values.server.kind | default "Deployment" }}
metadata:
  name: {{ include "base-service.fullname" . }}
  labels:
    {{- include "base-service.labels" (dict "context" . "component" .Values.server.name "name" .Values.server.name) | nindent 4 }}
    app.kubernetes.io/version: {{ default .Values.server.image.tag | quote }}
    {{- with .Values.server.podLabels }}
      {{- toYaml . | nindent 8 }}
    {{- end }}
  annotations:
    checksum/config: {{ .Values.server.configMaps.data | quote | sha256sum  }}
spec:
  {{- if not .Values.server.autoscaling.enabled }}
  replicas: {{ .Values.server.replicas }}
  {{- end }}
  {{- if .Values.server.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.server.revisionHistoryLimit }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "base-service.selectorLabels" (dict "context" . "name" .Values.server.name) | nindent 6 }}
  {{- if eq .Values.server.kind "StatefulSet" }}
  serviceName: {{ .Values.server.serviceName }}
  {{- end }}
  {{- if .Values.server.strategy }}
  strategy:
    {{- toYaml .Values.server.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.server.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "base-service.labels" (dict "context" . "component" .Values.server.name "name" .Values.server.name) | nindent 8 }}
    spec:
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "base-service.serviceAccountName" . }}
      containers:
        - name: {{ .Values.server.name }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          {{- if .Values.server.overrideCommand }}
          command:
            {{- range .Values.server.overrideCommand }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .Values.server.args }}
          args:
          {{- range .Values.server.args }}
          - {{ . }}
          {{- end }}
          {{- end }}
          {{- if .Values.server.exposes }}
          ports:
          {{- range .Values.server.exposes }}
            - containerPort: {{ int .port }}
              protocol: {{ .protocol | default "TCP" }}
              {{- if .name }}
              name: {{ .name }}
              {{- end }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          {{- if $env }}
          env:
          {{- toYaml $env.env | nindent 12 }}
          {{- end }}
          {{- if .Values.server.envFrom }}
          envFrom:
            {{- toYaml .Values.server.envFrom | nindent 12 }}
          {{- end }}
          {{- if .Values.server.volumeMounts }}
          volumeMounts:
            {{- toYaml .Values.server.volumeMounts | nindent 12 }}
          {{- end }}
          {{- if .Values.server.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.server.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.server.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.server.livenessProbe | nindent 12 }}
          {{- end }}
      {{- if .Values.server.volumes }}
      volumes:
        {{- toYaml .Values.server.volumes | nindent 8 }}
      {{- end }}
  {{- if and (eq .Values.server.kind "StatefulSet") .Values.server.volumeClaimTemplates }}
  volumeClaimTemplates:
  {{- toYaml .Values.server.volumeClaimTemplates | nindent 2 }}
  {{- end }}
